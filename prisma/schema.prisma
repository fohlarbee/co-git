// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  credits   Int?    @default(150)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userToProjects UserToProject[]
  questionsAsked      Question[]
}

model Project {
  id        String    @id @default(cuid())
  name      String
  githubUrl String
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userToProjects       UserToProject[]
  commits              Commit[]
  sourceCodeEmbeddings SourceCodeEmbedding[]
  savedQuestions            Question[]
  meetings             Meeting[]
}

model UserToProject {
  id        String @id @default(cuid())
  userId    String
  projectId String

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId])
}

model Commit {
  id        String @id @default(cuid())
  projectId String

  commitMesssage        String
  commitHash            String
  commitAuthorName      String
  commitAuthorAvaterUrl String
  commitDate            DateTime

  // AI Summary
  commitSummary String

  project Project @relation(fields: [projectId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SourceCodeEmbedding {
  id               String                      @id @default(cuid())
  summaryEmbedding Unsupported("vector(768)")?
  sourceCode       String
  fileName         String
  summary          String

  // Relationships
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}


model Question {
  id        String  @id @default(cuid())
  question  String
  answer    String

  filesReferences  Json?
  projectId       String
  userId          String

  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

   // Relationships
  user            User @relation(fields: [userId], references: [id])
  project         Project @relation(fields: [projectId], references: [id])

}


model Meeting {
  id        String  @id @default(cuid())
  name      String
  meetingUrl String
  projectId  String
  status      MeetingStatus @default(PROCESSING) // meeting

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  project Project @relation(fields: [projectId], references: [id])
  issues  Issue[]

 
}

model Issue {
  id        String  @id @default(cuid())
 
  start String
  end String
  gist String
  headline String
  summary String
  meetingId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  meeting Meeting @relation(fields: [meetingId], references: [id])

}
enum MeetingStatus {
  PROCESSING
  COMPLETED
}