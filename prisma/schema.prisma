// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector ]
}

model User {
    id      String    @id @default(cuid())
    email   String    @unique
    firstName String?
    lastName String?
    imageUrl String?
    credits Int?      @default(150)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt 

    // Relationships
    userToProjects UserToProject[]   

}

model Project {
    id          String    @id @default(cuid())
    name        String
    githubUrl   String
    deletedAt  DateTime?
    
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    // Relationships
    userToProjects UserToProject[]
    commits        Commit[]
    sourceCodeEmbeddings SourceCodeEmbedding[]
}

model UserToProject {
    id          String    @id @default(cuid())
    userId      String
    projectId   String

    user     User         @relation(fields: [userId], references: [id])
    project  Project      @relation(fields: [projectId], references: [id])

    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@unique([userId, projectId])
}

model Commit {
    id          String    @id @default(cuid())
    projectId   String

        commitMesssage String
        commitHash     String
        commitAuthorName String
        commitAuthorAvaterUrl String
        commitDate     DateTime

    // AI Summary
    commitSummary  String

    project     Project    @relation(fields: [projectId], references: [id])

    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt    
}

model SourceCodeEmbedding {
    id       String   @id @default(cuid())
    summaryEmbedding  Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    // Relationships
    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}